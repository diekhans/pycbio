#!/usr/bin/env python3
# Copyright 2006-2022 Mark Diekhans

import sys
from os import path as osp
import argparse

sys.path.insert(0, osp.normpath(osp.join(osp.dirname(__file__), "../lib")))
from pycbio.hgdata.psl import Psl, PslReader
from pycbio.hgdata.pslSqlite import PslSqliteTable
from pycbio.db import sqliteOps

# FIXME: not done, doesn't work

def parseArgs():
    usage = """
Load a PSL file into an SQLite database
"""
    parser = argparse.ArgumentParser(description=usage)
    parser.add_argument('pslFile', type=str,
                        help="PSL output file")
    parser.add_argument('sqliteDb', type=str,
                        help="SQLLite3 database, created if it does not exist")
    parser.add_argument('table', type=str,
                        help="Name of table to for PSLs")
    return parser.parse_args()

def loadPsl(pslFile):
    "load PSLs and sort by target"
    psls = [psl for psl in PslReader(pslFile)]
    psls.sort(key=Psl.targetKey)
    return psls

def loadDb(conn, table, psls):
    sqliteOps.execute(conn, "DROP TABLE IF EXISTS {}".format(table))
    pslTable = PslSqliteTable(conn, table, create=True)
    with conn:
        pslTable.loads(psls)
        pslTable.index()


def pslLoadSqlLite(args):
    psls = loadPsl(args.pslFile)
    conn = sqliteOps.connect(args.sqliteDb, create=True)
    loadDb(conn, args.table, psls)
    conn.close()


pslLoadSqlLite(parseArgs())
