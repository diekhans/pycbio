#!/usr/bin/env python3
# Copyright 2006-2012 Mark Diekhans

import sys
from os import path as osp
import argparse

sys.path.insert(0, osp.normpath(osp.join(osp.dirname(__file__), "../lib")))
from python.tsv import TsvReader


def parseArgs():
    desc = """Generate a simple Venn diagram.

The Boolean set Tsv input format consists of a columns
for each input set with a boolean value indicating if
the row includes that set, along with a column of counts.

Output defaults to PDF format.

"""
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("--countCol", dest="rnaq", action="store", default="Counts",
                        help="column name of counts column, default is 'Counts'")
    parser.add_argument("inStats",
                        help="input statistics")
    parser.add_argument("outImage",
                        help="output image")
    return parser.parse_args()


class BoolStats(object):
    "stats extract from boolean Tsv"
    def __init__(self, statsFile, countsCol):
        reader = TsvReader(statsFile, typeMap={countsCol: int}, defaultColType=bool)
        if countsCol not in reader.colMap:
            raise TsvReader("counts column \"{}\" not found".format(countsCol), reader)


class VennCircle(object):
    diameter = 1.0

    def __init__(self, pos):
        pass


raise Exception("FIXME: not done")
