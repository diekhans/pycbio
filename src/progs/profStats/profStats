#!/usr/bin/env python
# Copyright 2006-2010 Mark Diekhans

import sys, os
myBinDir = os.path.normpath(os.path.dirname(sys.argv[0]))
sys.path.append(myBinDir + "/../lib")
from optparse import OptionParser
import hotshot.stats

validSortKeys = ('calls', 'cumulative', 'file', 'module', 'pcalls', 'line',
                 'name', 'nfl', 'stdname', 'time')

class CmdOpts(object):
    usage="""%prog [options] profLog [profOut]

    format python profile logs from hotshot.
    """
    def __init__(self):
        parser = OptionParser(usage=usage)
        parser.add_option("--sort", action="store", dest="sort", default="cumulative",
                          help="sort result by specified key, one of: "
                          + ", ".join(validSortKeys))
        (opts, args) = parser.parse_args()
        if not (1 <= len(args) <= 2):
            parser.error("wrong number of arguments")
        if not opts.sort in validSortKeys:
            raise Exception("invalid sort key: " + opts.sort
                            + ", expected one of: " + ", ".join(validSortKeys))
        if len(args) < 2:
            args.append(None)
        (self.profLog, self.progOut) = args
        self.__dict__.update(opts.__dict__)


opts = CmdOpts()
profStats(opts.profLog, opts.profOut, opts.sort)

